// <auto-generated />
using System;
using AdminCoreProject.Demo.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminCoreProject.Demo.Migrations
{
    [DbContext(typeof(CilCommerceDbContext))]
    [Migration("20190819125846_Init6")]
    partial class Init6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminCoreProject.Demo.Domains.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createddate");

                    b.Property<string>("description");

                    b.Property<string>("name");

                    b.Property<DateTime>("updateddate");

                    b.HasKey("id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AdminCoreProject.Demo.Domains.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.Property<int>("maxcount");

                    b.Property<string>("name");

                    b.Property<decimal>("price");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AdminCoreProject.Demo.Domains.ProductCategoryMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("ProductId");

                    b.HasKey("id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategoryMappings");
                });

            modelBuilder.Entity("AdminCoreProject.Demo.Domains.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay");

                    b.Property<int?>("Gender");

                    b.Property<int?>("UserRegistirationTypeId");

                    b.Property<string>("address");

                    b.Property<string>("name");

                    b.Property<string>("surname");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AdminCoreProject.Demo.Domains.UserRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserRegistirationTypeId");

                    b.Property<string>("name");

                    b.Property<string>("registirationtype");

                    b.HasKey("id");

                    b.HasIndex("UserRegistirationTypeId");

                    b.ToTable("UserRegistrations");
                });

            modelBuilder.Entity("AdminCoreProject.Demo.Domains.ProductCategoryMapping", b =>
                {
                    b.HasOne("AdminCoreProject.Demo.Domains.Category", "Category")
                        .WithMany("productCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCoreProject.Demo.Domains.Product", "Product")
                        .WithMany("productCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCoreProject.Demo.Domains.UserRegistration", b =>
                {
                    b.HasOne("AdminCoreProject.Demo.Domains.User")
                        .WithMany("UserRegistrations")
                        .HasForeignKey("UserRegistirationTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
